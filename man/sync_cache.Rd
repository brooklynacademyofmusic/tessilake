% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache_readwrite.R
\name{sync_cache}
\alias{sync_cache}
\title{sync_cache}
\usage{
sync_cache(
  table_name,
  type,
  incremental = FALSE,
  date_column = NULL,
  whole_file = !cache_exists_any(table_name, type),
  ...
)
}
\arguments{
\item{table_name}{string}

\item{type}{string, e.g. "tessi" or "stream"}

\item{incremental}{boolean, whether to incrementally update the caches by using \link{cache_update} or simply copying the whole file.}

\item{date_column}{character name of the column to be used for determining the date of last row update, useful for incremental updates.}

\item{whole_file}{boolean, whether to copy the whole file using \link{file.copy} or to convert it using \link{cache_read} and \link{cache_write}. The default
is to convert if the cache is in a recognizable \link[arrow:arrow-package]{arrow} format and to copy if it is not.}

\item{...}{additional parameters passed on to \link{cache_update}}
}
\value{
invisible
}
\description{
Syncs cached files across storage depths by incrementally updating using \link{cache_update} or simply copying and converting
the most recently-modified cache to the other locations using \link{cache_read} and \link{cache_write}.
}
\examples{
\dontrun{
x <- data.table(a = c(1, 2, 3))
write_cache(x, "test", "stream", primary_keys = c("a"))
sync_cache("test", "stream")
}
}
